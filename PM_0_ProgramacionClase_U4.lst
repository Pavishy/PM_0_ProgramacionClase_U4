Microsoft (R) Macro Assembler Version 14.29.30133.0	    11/25/21 20:00:38
Intro Cadena						     Page 1 - 1


				TITLE Intro Cadenas

				;DESCRPICIÓN 
				;Objetivo:  
				;
				; Autore(s):
				;         García Ruiz Alejandro H.


				; Semestre: 8vo Semestre ISC 
				;FIN DESCRPICIÓN

				INCLUDE Irvine32.inc  
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				INCLUDE MACROS.inc
			      C ImpPantalla_N_Ln MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		
			      C 		pop edx   ;recupero el valor original de edx
			      C 		
			      C ENDM
			      C 
			      C ImpPantalla MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring		
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C Imp MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		
			      C 		mov edx, offset mensaje
			      C 		call crlf
			      C 	
			      C ENDM
			      C 
			      C Sumatoria MACRO 
			      C 	
			      C 	.data
			      C 		
			      C 	.code
			      C 	   mov edx, 0
			      C        div ecx
			      C        add ebx, edx
			      C 
			      C ENDM
			      C 
			      C ImpPantallaLn MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C ImpPantalla_LecturaLn MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call readdec
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C ImpPantalla_LecturaLn_V2 MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call readint
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C Suma_V1 MACRO  ; los valores que usará el macro son almacenados en registros en el programa principal
			      C 			   ; y estos son consultados / accedidos desde el MACRO
			      C 
			      C 	; sumar a los registros ebx, ecx
			      C 
			      C 	.data
			      C 
			      C 	.code
			      C 		
			      C 		add ebx, ecx  ; el valor resultado estará en ebx
			      C 
			      C ENDM
			      C 
			      C 
			      C Suma_V2 MACRO a, b  		
			      C 	
			      C 	; sumar a los registros ebx, ecx que contendrán al valor de a y b respectivamente
			      C 	.data
			      C 
			      C 	.code
			      C 		
			      C 		push ecx ; respaldar el valor de ecx 
			      C 
			      C 		mov ebx, a
			      C 		mov ecx, b
			      C 
			      C 		add ebx, ecx  ; el valor resultado estará en ebx
			      C 
			      C 
			      C 		pop ecx ;recupero el valor original de ecx para que el usuario 
			      C 		;lo pueda seguir utilizando sin problema
			      C ENDM
			      C 
			      C 
			      C Suma_V3 MACRO a, b  				
			      C 	.data
			      C 		varA dword a
			      C 		varB dword b
			      C 
			      C 	.code
			      C 				
			      C 		mov ebx, varA		
			      C 
			      C 		add ebx, varB  ; el valor resultado estará en ebx
			      C 	
			      C ENDM
			      C 
			      C Salto MACRO  				
			      C 	.data
			      C 	.code
			      C 				
			      C 		call crlf
			      C 	
			      C ENDM
			      C 
			      C EscribirTXT MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writestring
			      C ENDM
			      C 
			      C LeerTXT MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readstring
			      C ENDM
			      C 
			      C EscribirNUM MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writedec
			      C ENDM
			      C 
			      C LeeNTeclado MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readdec
			      C ENDM
			      C 
			      C EscribirCARACTER MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writechar
			      C ENDM
			      C 
			      C LeerCARACTER MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readchar
			      C ENDM
			      C 
			      C RangoAl MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call randomrange
			      C ENDM
			      C 
			      C 
			      C Semilla MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call randomize
			      C ENDM
			      C 

 00000000			.data
				; Área de Declaración de Variables

				;                           INDICE
 00000000 50 45 52 52 4F	palabras_20 db "PERRO",0    ; 0
	   00
 00000006  47 41 54 4F 2D				db "GATO-",0    ; 6
	   00
 0000000C  4F 53 4F 2D 2D				db "OSO--",0    ; 12
	   00
 00000012  41 5A 2D 2D 2D				db "AZ---",0    ; 18
	   00
 00000018  46 4F 43 4F 2D				db "FOCO-",0	; 24	 
	   00
 0000001E  50 41 50 41 53				db "PAPAS",0    ; 30
	   00
 00000024  4C 41 50 49 5A				db "LAPIZ",0    ; 36
	   00

 0000002A 2D 00			espacio_20 db "-",0
 0000002C 00000005		vidas dword 5

 00000030  0000000F [		palabraSeleccionada_20 db 15 dup(0) 
	    00
	   ]

 0000003F 00000000		contador_20 dword 0

 00000043  0000000F [		palabraEscondida_20 db 15 dup(0)   ; "....."  .. es un punto por cada letra a descrubir
	    00
	   ]

 00000000			.code

 00000000				main20 PROC	
						;Lógica del Programa				

							Semilla  
 00000052		     1		.data
 00000000		     1		.code
 00000000  E8 00000000 E     1		call randomize

 00000005  B8 00000007					mov eax, 7     
							RangoAl 
 00000052		     1		.data
 0000000A		     1		.code
 0000000A  E8 00000000 E     1		call randomrange

 0000000F  BB 00000006					mov ebx, 6     
 00000014  F7 E3					mul ebx  

							
 00000016  BE 00000000 R				mov esi, offset palabras_20  
 0000001B  03 F0					add esi, eax  

 0000001D  BF 00000030 R				mov edi, offset palabraSeleccionada_20 

 00000022  B9 00000006					mov ecx, 6  

 00000027						ciclo:				

 00000027  8B DF						mov ebx, edi  
								
 00000029  BF 0000002A R					mov edi, offset espacio_20
 0000002E  A6							cmpsb  	

 0000002F  74 14						jz detener   

								
 00000031  FF 05 0000003F R						inc contador_20   
								
 00000037  4E								dec esi					
											
 00000038  8B FB							mov edi, ebx  
 0000003A  8B C7							mov eax, edi
								
 0000003C  A4								movsb ;copiar el valor 
									
 0000003D  E2 E8						loop ciclo

 0000003F  FF 0D 0000003F R						dec contador_20

 00000045						detener:
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

										

							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
							;Salto
							;ImpPantalla_N_Ln "Palabra Seleccionada: "
							;mov edx, offset palabraSeleccionada_20
							;EscribirTXT
							;Salto

							;;;;GENERAR PALABRA ESCONDIDA... 

 00000045  8B 0D 0000003F R					mov ecx, contador_20  

 0000004B  BF 00000043 R					mov edi, offset palabraEscondida_20

 00000050  B8 00000000						mov eax, 0
 00000055  B0 2E						mov al, "."     

 00000057  F3/ AA						rep stosb
								
							Salto
 00000052		     1		.data
 00000059		     1		.code
 00000059  E8 00000000 E     1			call crlf
							ImpPantalla_N_Ln "Palabra Escondida: "
 00000052		     1		.data
 00000052 50 61 6C 61 62     1			??0000 db "Palabra Escondida: ",0
	   72 61 20 45 73
	   63 6F 6E 64 69
	   64 61 3A 20 00
 0000005E		     1		.code
 0000005E  52		     1			push edx  ; guardo en la pila el valor
 0000005F  BA 00000052 R     1			mov edx, offset ??0000
 00000064  E8 00000000 E     1			call writestring
 00000069  5A		     1			pop edx   ;recupero el valor original de edx
 0000006A  BA 00000043 R				mov edx, offset palabraEscondida_20
							EscribirTXT
 00000066		     1		.data
 0000006F		     1		.code
 0000006F  E8 00000000 E     1		call writestring
							Salto
 00000066		     1		.data
 00000074		     1		.code
 00000074  E8 00000000 E     1			call crlf

							
							; PROCEDIMIENTO EN DESARROLLO..."BUSCAR UNA LETRA EN LA PALABRA"


 00000079				MainMenu:	

 00000079  B8 00000000					MOV EAX, 0

							Salto
 00000066		     1		.data
 0000007E		     1		.code
 0000007E  E8 00000000 E     1			call crlf
							Salto
 00000066		     1		.data
 00000083		     1		.code
 00000083  E8 00000000 E     1			call crlf

							ImpPantalla_N_Ln "Ingresa una Letra:  "
 00000066		     1		.data
 00000066 49 6E 67 72 65     1			??0001 db "Ingresa una Letra:  ",0
	   73 61 20 75 6E
	   61 20 4C 65 74
	   72 61 3A 20 20
	   00
 00000088		     1		.code
 00000088  52		     1			push edx  ; guardo en la pila el valor
 00000089  BA 00000066 R     1			mov edx, offset ??0001
 0000008E  E8 00000000 E     1			call writestring
 00000093  5A		     1			pop edx   ;recupero el valor original de edx
							LeerCARACTER  
 0000007B		     1		.data
 00000094		     1		.code
 00000094  E8 00000000 E     1		call readchar
							EscribirCARACTER 
 0000007B		     1		.data
 00000099		     1		.code
 00000099  E8 00000000 E     1		call writechar

							Salto
 0000007B		     1		.data
 0000009E		     1		.code
 0000009E  E8 00000000 E     1			call crlf

							ImpPantalla_N_Ln "La Letra ingresada es: "
 0000007B		     1		.data
 0000007B 4C 61 20 4C 65     1			??0002 db "La Letra ingresada es: ",0
	   74 72 61 20 69
	   6E 67 72 65 73
	   61 64 61 20 65
	   73 3A 20 00
 000000A3		     1		.code
 000000A3  52		     1			push edx  ; guardo en la pila el valor
 000000A4  BA 0000007B R     1			mov edx, offset ??0002
 000000A9  E8 00000000 E     1			call writestring
 000000AE  5A		     1			pop edx   ;recupero el valor original de edx
							;sub al,20H
							EscribirCARACTER 
 00000093		     1		.data
 000000AF		     1		.code
 000000AF  E8 00000000 E     1		call writechar

							;;;;;;;;
							Salto
 00000093		     1		.data
 000000B4		     1		.code
 000000B4  E8 00000000 E     1			call crlf
							Salto
 00000093		     1		.data
 000000B9		     1		.code
 000000B9  E8 00000000 E     1			call crlf

 000000BE  BF 00000030 R				mov edi, offset palabraSeleccionada_20	;	para buscar el caracter ingresado			
 000000C3  BE 00000043 R				mov esi, offset palabraEscondida_20   ; si existe, se usara para reeemplazar al punto por su caracter

 000000C8  8B 0D 0000003F R				mov ecx, contador_20 ;

 000000CE						ciclo2:

 000000CE  46							inc esi ; para mantener en el mismo indice a ambas palabras para que ambos registros cuenten con la misma cantidad y no se reemplazen los
								; indices incorrectos, ya que esi debe de incrementar su espacio porque edi por medi de scasb incrementa en 1

 000000CF  AE							scasb  ; compara lo que esta en el acumulador con la memoria direccionada				
												
								; if es igual a cero.. then sobreescribimos con esa letra
								; else no hacemos nada

								
 000000D0  75 08						jnz continuar  ; si no es igual
								
								; si es cero, entoces se realiza: 

 000000D2  4E								dec esi  ; regresa al indice en el que fue igual
 000000D3  87 F7							xchg esi, edi; intercambia "seleccionada" por "escondida"
 000000D5  AA								stosb     				
 000000D6  4F								dec edi   ; se debe decrementar en uno, debido a que edi se incremento 
											  ; de manera automatica con stosb 

 000000D7  87 F7							xchg esi, edi ;se regresan las palabras nuevamente a como estaban al principio					
 000000D9  46								inc esi

 000000DA							continuar:							
								
 000000DA  E2 F2					loop ciclo2

							
							Salto
 00000093		     1		.data
 000000DC		     1		.code
 000000DC  E8 00000000 E     1			call crlf
							ImpPantalla_N_Ln "Palabra Escondida: "
 00000093		     1		.data
 00000093 50 61 6C 61 62     1			??0003 db "Palabra Escondida: ",0
	   72 61 20 45 73
	   63 6F 6E 64 69
	   64 61 3A 20 00
 000000E1		     1		.code
 000000E1  52		     1			push edx  ; guardo en la pila el valor
 000000E2  BA 00000093 R     1			mov edx, offset ??0003
 000000E7  E8 00000000 E     1			call writestring
 000000EC  5A		     1			pop edx   ;recupero el valor original de edx
 000000ED  BA 00000043 R				mov edx, offset palabraEscondida_20
							EscribirTXT
 000000A7		     1		.data
 000000F2		     1		.code
 000000F2  E8 00000000 E     1		call writestring
							Salto
 000000A7		     1		.data
 000000F7		     1		.code
 000000F7  E8 00000000 E     1			call crlf

							
 000000FC  E9 FFFFFF78					JMP MainMenu
							

							;jz esigual
							;jnz noesigual
							;esigual:
							;	ImpPantallaLn "Es igual"
							;	jmp MainMenu

							;noesigual:
							;	ImpPantallaLn "NO es igual"
							;	jmp MainMenu

							Salto
 000000A7		     1		.data
 00000101		     1		.code
 00000101  E8 00000000 E     1			call crlf

						exit	

 0000010D				main20 ENDP
					
					END main20
Microsoft (R) Macro Assembler Version 14.29.30133.0	    11/25/21 20:00:38
Intro Cadena						     Symbols 2 - 1




Macros:

                N a m e                 Type

EscribirCARACTER . . . . . . . .	Proc
EscribirNUM  . . . . . . . . . .	Proc
EscribirTXT  . . . . . . . . . .	Proc
ImpPantallaLn  . . . . . . . . .	Proc
ImpPantalla_LecturaLn_V2 . . . .	Proc
ImpPantalla_LecturaLn  . . . . .	Proc
ImpPantalla_N_Ln . . . . . . . .	Proc
ImpPantalla  . . . . . . . . . .	Proc
Imp  . . . . . . . . . . . . . .	Proc
LeeNTeclado  . . . . . . . . . .	Proc
LeerCARACTER . . . . . . . . . .	Proc
LeerTXT  . . . . . . . . . . . .	Proc
RangoAl  . . . . . . . . . . . .	Proc
Salto  . . . . . . . . . . . . .	Proc
Semilla  . . . . . . . . . . . .	Proc
Suma_V1  . . . . . . . . . . . .	Proc
Suma_V2  . . . . . . . . . . . .	Proc
Suma_V3  . . . . . . . . . . . .	Proc
Sumatoria  . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000A7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000010D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main20 . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000010D Public STDCALL
  ciclo  . . . . . . . . . . . .	L Near	 00000027 _TEXT	
  detener  . . . . . . . . . . .	L Near	 00000045 _TEXT	
  MainMenu . . . . . . . . . . .	L Near	 00000079 _TEXT	
  ciclo2 . . . . . . . . . . . .	L Near	 000000CE _TEXT	
  continuar  . . . . . . . . . .	L Near	 000000DA _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000052 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 00000066 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000007B _DATA	
??0003 . . . . . . . . . . . . .	Byte	 00000093 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
contador_20  . . . . . . . . . .	DWord	 0000003F _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
espacio_20 . . . . . . . . . . .	Byte	 0000002A _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
palabraEscondida_20  . . . . . .	Byte	 00000043 _DATA	
palabraSeleccionada_20 . . . . .	Byte	 00000030 _DATA	
palabras_20  . . . . . . . . . .	Byte	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
vidas  . . . . . . . . . . . . .	DWord	 0000002C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors

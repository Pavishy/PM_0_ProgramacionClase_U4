Microsoft (R) Macro Assembler Version 14.29.30133.0	    12/01/21 18:11:48
JUEGO DEL AHORCAD					     Page 1 - 1


				TITLE JUEGO DEL AHORCADO

				;DESCRPICIÓN 
				;Objetivo:  
				;Autore(s):
				;         Mi Equipo
				;Semestre: 8vo Semestre ISC 
				;FIN DESCRPICIÓN

				INCLUDE Irvine32.inc  
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE MACROS.inc
			      C ImpPantalla_N_Ln MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		
			      C 		pop edx   ;recupero el valor original de edx
			      C 		
			      C ENDM
			      C 
			      C ImpPantalla MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring		
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C Imp MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		
			      C 		mov edx, offset mensaje
			      C 		call crlf
			      C 	
			      C ENDM
			      C 
			      C Sumatoria MACRO 
			      C 	
			      C 	.data
			      C 		
			      C 	.code
			      C 	   mov edx, 0
			      C        div ecx
			      C        add ebx, edx
			      C 
			      C ENDM
			      C 
			      C ImpPantallaLn MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C ImpPantalla_LecturaLn MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call readdec
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C ImpPantalla_LecturaLn_V2 MACRO texto
			      C 	local mensaje
			      C 	.data
			      C 		mensaje db texto,0
			      C 	.code
			      C 		push edx  ; guardo en la pila el valor
			      C 		mov edx, offset mensaje
			      C 		call writestring
			      C 		call readint
			      C 		call crlf
			      C 		pop edx   ;recupero el valor original de edx
			      C ENDM
			      C 
			      C Suma_V1 MACRO  ; los valores que usará el macro son almacenados en registros en el programa principal
			      C 			   ; y estos son consultados / accedidos desde el MACRO
			      C 
			      C 	; sumar a los registros ebx, ecx
			      C 
			      C 	.data
			      C 
			      C 	.code
			      C 		
			      C 		add ebx, ecx  ; el valor resultado estará en ebx
			      C 
			      C ENDM
			      C 
			      C 
			      C Suma_V2 MACRO a, b  		
			      C 	
			      C 	; sumar a los registros ebx, ecx que contendrán al valor de a y b respectivamente
			      C 	.data
			      C 
			      C 	.code
			      C 		
			      C 		push ecx ; respaldar el valor de ecx 
			      C 
			      C 		mov ebx, a
			      C 		mov ecx, b
			      C 
			      C 		add ebx, ecx  ; el valor resultado estará en ebx
			      C 
			      C 
			      C 		pop ecx ;recupero el valor original de ecx para que el usuario 
			      C 		;lo pueda seguir utilizando sin problema
			      C ENDM
			      C 
			      C 
			      C Suma_V3 MACRO a, b  				
			      C 	.data
			      C 		varA dword a
			      C 		varB dword b
			      C 
			      C 	.code
			      C 				
			      C 		mov ebx, varA		
			      C 
			      C 		add ebx, varB  ; el valor resultado estará en ebx
			      C 	
			      C ENDM
			      C 
			      C Salto MACRO  				
			      C 	.data
			      C 	.code
			      C 				
			      C 		call crlf
			      C 	
			      C ENDM
			      C 
			      C EscribirTXT MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writestring
			      C ENDM
			      C 
			      C LeerTXT MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readstring
			      C ENDM
			      C 
			      C EscribirNUM MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writedec
			      C ENDM
			      C 
			      C LeeNTeclado MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readdec
			      C ENDM
			      C 
			      C EscribirCARACTER MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call writechar
			      C ENDM
			      C 
			      C LeerCARACTER MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call readchar
			      C ENDM
			      C 
			      C RangoAl MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call randomrange
			      C ENDM
			      C 
			      C 
			      C Semilla MACRO
			      C 	.data
			      C 	.code
			      C 
			      C 	call randomize
			      C ENDM
			      C 

 00000000			.data
				; Área de Declaración de Variables

 00000000 50 45 52 52 4F	palabras_arreglo db "PERRO",0    ; 0
	   00
 00000006  47 41 54 4F 2D				db "GATO-",0    ; 6
	   00
 0000000C  4F 53 4F 2D 2D				db "OSO--",0    ; 12
	   00
 00000012  50 41 5A 2D 2D				db "PAZ--",0    ; 18
	   00
 00000018  46 4F 43 4F 2D				db "FOCO-",0	; 24	 
	   00
 0000001E  50 41 50 41 53				db "PAPAS",0    ; 30
	   00
 00000024  4C 41 50 49 5A				db "LAPIZ",0    ; 36
	   00

 0000002A 2D 00			Espacio db "-",0
 0000002C  0000000F [		palabraSeleccionada db 15 dup(0) 
	    00
	   ]

 0000003B 0000000A		Vidas dword 10
 0000003F 00000000		contador dword 0
 00000043 00000000		LetrasDescubiertas dword 0
 00000047 00000000		Elije dword 0

 0000004B  0000000F [		palabraEscondida db 15 dup(0)
	    00
	   ]

 00000000			.code

 00000000				ahorcado PROC	
							;Lógica del Programa		
							
							ImpPantallaLn "    JUEGO DEL AHORCADO _ _ _ _ _"
 0000005A		     1		.data
 0000005A 20 20 20 20 4A     1			??0000 db "    JUEGO DEL AHORCADO _ _ _ _ _",0
	   55 45 47 4F 20
	   44 45 4C 20 41
	   48 4F 52 43 41
	   44 4F 20 5F 20
	   5F 20 5F 20 5F
	   20 5F 00
 00000000		     1		.code
 00000000  52		     1			push edx  ; guardo en la pila el valor
 00000001  BA 0000005A R     1			mov edx, offset ??0000
 00000006  E8 00000000 E     1			call writestring
 0000000B  E8 00000000 E     1			call crlf
 00000010  5A		     1			pop edx   ;recupero el valor original de edx
							ImpPantallaLn "(X)                            O"
 0000007B		     1		.data
 0000007B 28 58 29 20 20     1			??0001 db "(X)                            O",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 4F 00
 00000011		     1		.code
 00000011  52		     1			push edx  ; guardo en la pila el valor
 00000012  BA 0000007B R     1			mov edx, offset ??0001
 00000017  E8 00000000 E     1			call writestring
 0000001C  E8 00000000 E     1			call crlf
 00000021  5A		     1			pop edx   ;recupero el valor original de edx
							ImpPantallaLn "(0J0)                         /|\"
 0000009C		     1		.data
 0000009C 28 30 4A 30 29     1			??0002 db "(0J0)                         /|\",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 7C 5C 00
 00000022		     1		.code
 00000022  52		     1			push edx  ; guardo en la pila el valor
 00000023  BA 0000009C R     1			mov edx, offset ??0002
 00000028  E8 00000000 E     1			call writestring
 0000002D  E8 00000000 E     1			call crlf
 00000032  5A		     1			pop edx   ;recupero el valor original de edx
							ImpPantallaLn "(UwU)                          |"
 000000BE		     1		.data
 000000BE 28 55 77 55 29     1			??0003 db "(UwU)                          |",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 00
 00000033		     1		.code
 00000033  52		     1			push edx  ; guardo en la pila el valor
 00000034  BA 000000BE R     1			mov edx, offset ??0003
 00000039  E8 00000000 E     1			call writestring
 0000003E  E8 00000000 E     1			call crlf
 00000043  5A		     1			pop edx   ;recupero el valor original de edx
							ImpPantallaLn "(#)                           / \"
 000000DF		     1		.data
 000000DF 28 23 29 20 20     1			??0004 db "(#)                           / \",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 20 5C 00
 00000044		     1		.code
 00000044  52		     1			push edx  ; guardo en la pila el valor
 00000045  BA 000000DF R     1			mov edx, offset ??0004
 0000004A  E8 00000000 E     1			call writestring
 0000004F  E8 00000000 E     1			call crlf
 00000054  5A		     1			pop edx   ;recupero el valor original de edx

 00000055			Play:

							Semilla  
 00000101		     1		.data
 00000055		     1		.code
 00000055  E8 00000000 E     1		call randomize

 0000005A  B8 00000007					mov eax, 7     
							RangoAl 
 00000101		     1		.data
 0000005F		     1		.code
 0000005F  E8 00000000 E     1		call randomrange

 00000064  BB 00000006					mov ebx, 6     
 00000069  F7 E3					mul ebx  

 0000006B  BE 00000000 R				mov esi, offset palabras_arreglo  
 00000070  03 F0					add esi, eax  
 00000072  BF 0000002C R				mov edi, offset palabraSeleccionada
 00000077  B9 00000006					mov ecx, 6  

 0000007C			ciclo:				

 0000007C  8B DF						mov ebx, edi  
 0000007E  BF 0000002A R					mov edi, offset Espacio
 00000083  A6							cmpsb  	
 00000084  74 14						jz detener   

 00000086  FF 05 0000003F R						inc contador   
								
 0000008C  4E								dec esi					
											
 0000008D  8B FB							mov edi, ebx  
 0000008F  8B C7							mov eax, edi
								
 00000091  A4								movsb 
									
 00000092  E2 E8						loop ciclo

 00000094  FF 0D 0000003F R						dec contador

 0000009A						detener:

 0000009A  8B 0D 0000003F R					mov ecx, contador  

 000000A0  BF 0000004B R					mov edi, offset palabraEscondida

 000000A5  B8 00000000						mov eax, 0
 000000AA  B0 2E						mov al, "."     

 000000AC  F3/ AA						rep stosb
								
							Salto
 00000101		     1		.data
 000000AE		     1		.code
 000000AE  E8 00000000 E     1			call crlf
							ImpPantalla_N_Ln "Palabra Escondida: "
 00000101		     1		.data
 00000101 50 61 6C 61 62     1			??0005 db "Palabra Escondida: ",0
	   72 61 20 45 73
	   63 6F 6E 64 69
	   64 61 3A 20 00
 000000B3		     1		.code
 000000B3  52		     1			push edx  ; guardo en la pila el valor
 000000B4  BA 00000101 R     1			mov edx, offset ??0005
 000000B9  E8 00000000 E     1			call writestring
 000000BE  5A		     1			pop edx   ;recupero el valor original de edx
 000000BF  BA 0000004B R				mov edx, offset palabraEscondida
							EscribirTXT
 00000115		     1		.data
 000000C4		     1		.code
 000000C4  E8 00000000 E     1		call writestring
							Salto
 00000115		     1		.data
 000000C9		     1		.code
 000000C9  E8 00000000 E     1			call crlf

 000000CE			MainMenu:	

 000000CE  B8 00000000					mov eax, 0
							Salto
 00000115		     1		.data
 000000D3		     1		.code
 000000D3  E8 00000000 E     1			call crlf

							ImpPantalla_N_Ln "Ingresa una Letra en Mayuscula:  "
 00000115		     1		.data
 00000115 49 6E 67 72 65     1			??0006 db "Ingresa una Letra en Mayuscula:  ",0
	   73 61 20 75 6E
	   61 20 4C 65 74
	   72 61 20 65 6E
	   20 4D 61 79 75
	   73 63 75 6C 61
	   3A 20 20 00
 000000D8		     1		.code
 000000D8  52		     1			push edx  ; guardo en la pila el valor
 000000D9  BA 00000115 R     1			mov edx, offset ??0006
 000000DE  E8 00000000 E     1			call writestring
 000000E3  5A		     1			pop edx   ;recupero el valor original de edx
							LeerCARACTER  
 00000137		     1		.data
 000000E4		     1		.code
 000000E4  E8 00000000 E     1		call readchar
							EscribirCARACTER 
 00000137		     1		.data
 000000E9		     1		.code
 000000E9  E8 00000000 E     1		call writechar
							Salto
 00000137		     1		.data
 000000EE		     1		.code
 000000EE  E8 00000000 E     1			call crlf

							ImpPantalla_N_Ln "La Letra ingresada es: "
 00000137		     1		.data
 00000137 4C 61 20 4C 65     1			??0007 db "La Letra ingresada es: ",0
	   74 72 61 20 69
	   6E 67 72 65 73
	   61 64 61 20 65
	   73 3A 20 00
 000000F3		     1		.code
 000000F3  52		     1			push edx  ; guardo en la pila el valor
 000000F4  BA 00000137 R     1			mov edx, offset ??0007
 000000F9  E8 00000000 E     1			call writestring
 000000FE  5A		     1			pop edx   ;recupero el valor original de edx
							;sub al,20H
							EscribirCARACTER 
 0000014F		     1		.data
 000000FF		     1		.code
 000000FF  E8 00000000 E     1		call writechar

							Salto
 0000014F		     1		.data
 00000104		     1		.code
 00000104  E8 00000000 E     1			call crlf

 00000109  BF 0000002C R				mov edi, offset palabraSeleccionada				
 0000010E  BE 0000004B R				mov esi, offset palabraEscondida  
 00000113  8B 0D 0000003F R				mov ecx, contador

 00000119			ciclo2:

 00000119  46							inc esi 
 0000011A  AE							scasb  		
								
 0000011B  75 0E						jnz continuar 

 0000011D  4E								dec esi 
 0000011E  87 F7							xchg esi, edi
 00000120  AA								stosb     				
 00000121  4F								dec edi  

 00000122  87 F7							xchg esi, edi 			
 00000124  46								inc esi
									
 00000125  FF 05 00000043 R						inc letrasdescubiertas

 0000012B			continuar:							
								
 0000012B  E2 EC					loop ciclo2
						
							Salto
 0000014F		     1		.data
 0000012D		     1		.code
 0000012D  E8 00000000 E     1			call crlf
							ImpPantalla_N_Ln "Palabra Escondida: "
 0000014F		     1		.data
 0000014F 50 61 6C 61 62     1			??0008 db "Palabra Escondida: ",0
	   72 61 20 45 73
	   63 6F 6E 64 69
	   64 61 3A 20 00
 00000132		     1		.code
 00000132  52		     1			push edx  ; guardo en la pila el valor
 00000133  BA 0000014F R     1			mov edx, offset ??0008
 00000138  E8 00000000 E     1			call writestring
 0000013D  5A		     1			pop edx   ;recupero el valor original de edx
 0000013E  BA 0000004B R				mov edx, offset palabraEscondida
							EscribirTXT
 00000163		     1		.data
 00000143		     1		.code
 00000143  E8 00000000 E     1		call writestring
							Salto
 00000163		     1		.data
 00000148		     1		.code
 00000148  E8 00000000 E     1			call crlf
 0000014D  EB 05					jmp Comparar
							Salto
 00000163		     1		.data
 0000014F		     1		.code
 0000014F  E8 00000000 E     1			call crlf
							
 00000154			Comparar:
 00000154  8B 0D 00000043 R					mov ecx,LetrasDescubiertas
 0000015A  39 0D 0000003F R					cmp contador,ecx
 00000160  74 02						jz esigual
 00000162  75 64						jnz noesigual
 00000164							esigual:
									Salto
 00000163		     1		.data
 00000164		     1		.code
 00000164  E8 00000000 E     1			call crlf
									ImpPantallaLn "    (UwU)  GANASTE!!! (UwU)"
 00000163		     1		.data
 00000163 20 20 20 20 28     1			??0009 db "    (UwU)  GANASTE!!! (UwU)",0
	   55 77 55 29 20
	   20 47 41 4E 41
	   53 54 45 21 21
	   21 20 28 55 77
	   55 29 00
 00000169		     1		.code
 00000169  52		     1			push edx  ; guardo en la pila el valor
 0000016A  BA 00000163 R     1			mov edx, offset ??0009
 0000016F  E8 00000000 E     1			call writestring
 00000174  E8 00000000 E     1			call crlf
 00000179  5A		     1			pop edx   ;recupero el valor original de edx
									
									ImpPantallaLn "              \O/"
 0000017F		     1		.data
 0000017F 20 20 20 20 20     1			??000A db "              \O/",0
	   20 20 20 20 20
	   20 20 20 20 5C
	   4F 2F 00
 0000017A		     1		.code
 0000017A  52		     1			push edx  ; guardo en la pila el valor
 0000017B  BA 0000017F R     1			mov edx, offset ??000A
 00000180  E8 00000000 E     1			call writestring
 00000185  E8 00000000 E     1			call crlf
 0000018A  5A		     1			pop edx   ;recupero el valor original de edx
									ImpPantallaLn "               |"
 00000191		     1		.data
 00000191 20 20 20 20 20     1			??000B db "               |",0
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 00
 0000018B		     1		.code
 0000018B  52		     1			push edx  ; guardo en la pila el valor
 0000018C  BA 00000191 R     1			mov edx, offset ??000B
 00000191  E8 00000000 E     1			call writestring
 00000196  E8 00000000 E     1			call crlf
 0000019B  5A		     1			pop edx   ;recupero el valor original de edx
									ImpPantallaLn "               |"
 000001A2		     1		.data
 000001A2 20 20 20 20 20     1			??000C db "               |",0
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 00
 0000019C		     1		.code
 0000019C  52		     1			push edx  ; guardo en la pila el valor
 0000019D  BA 000001A2 R     1			mov edx, offset ??000C
 000001A2  E8 00000000 E     1			call writestring
 000001A7  E8 00000000 E     1			call crlf
 000001AC  5A		     1			pop edx   ;recupero el valor original de edx
									ImpPantallaLn "              / \"
 000001B3		     1		.data
 000001B3 20 20 20 20 20     1			??000D db "              / \",0
	   20 20 20 20 20
	   20 20 20 20 2F
	   20 5C 00
 000001AD		     1		.code
 000001AD  52		     1			push edx  ; guardo en la pila el valor
 000001AE  BA 000001B3 R     1			mov edx, offset ??000D
 000001B3  E8 00000000 E     1			call writestring
 000001B8  E8 00000000 E     1			call crlf
 000001BD  5A		     1			pop edx   ;recupero el valor original de edx
 000001BE  E9 000000B9							jmp Reintentar
									Salto
 000001C5		     1		.data
 000001C3		     1		.code
 000001C3  E8 00000000 E     1			call crlf
									
 000001C8			noesigual:
 000001C8  FF 0D 0000003B R						dec vidas
 000001CE  A1 0000003B R						mov eax,vidas
									ImpPantalla_N_Ln "VIDA #"
 000001C5		     1		.data
 000001C5 56 49 44 41 20     1			??000E db "VIDA #",0
	   23 00
 000001D3		     1		.code
 000001D3  52		     1			push edx  ; guardo en la pila el valor
 000001D4  BA 000001C5 R     1			mov edx, offset ??000E
 000001D9  E8 00000000 E     1			call writestring
 000001DE  5A		     1			pop edx   ;recupero el valor original de edx
									EscribirNUM
 000001CC		     1		.data
 000001DF		     1		.code
 000001DF  E8 00000000 E     1		call writedec
									Salto
 000001CC		     1		.data
 000001E4		     1		.code
 000001E4  E8 00000000 E     1			call crlf
 000001E9  EB 05							jmp Fin
									Salto
 000001CC		     1		.data
 000001EB		     1		.code
 000001EB  E8 00000000 E     1			call crlf
							
 000001F0			Fin:
 000001F0  83 3D 0000003B R						cmp vidas,0
	   00
 000001F7  74 02							jz sale
 000001F9  75 7C							jnz continua
 000001FB								sale:
										Salto
 000001CC		     1		.data
 000001FB		     1		.code
 000001FB  E8 00000000 E     1			call crlf
										ImpPantallaLn " (X) FIN DEL JUEGO ! PERDISTE (X)"
 000001CC		     1		.data
 000001CC 20 28 58 29 20     1			??000F db " (X) FIN DEL JUEGO ! PERDISTE (X)",0
	   46 49 4E 20 44
	   45 4C 20 4A 55
	   45 47 4F 20 21
	   20 50 45 52 44
	   49 53 54 45 20
	   28 58 29 00
 00000200		     1		.code
 00000200  52		     1			push edx  ; guardo en la pila el valor
 00000201  BA 000001CC R     1			mov edx, offset ??000F
 00000206  E8 00000000 E     1			call writestring
 0000020B  E8 00000000 E     1			call crlf
 00000210  5A		     1			pop edx   ;recupero el valor original de edx
										ImpPantallaLn "                _"
 000001EE		     1		.data
 000001EE 20 20 20 20 20     1			??0010 db "                _",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 00
 00000211		     1		.code
 00000211  52		     1			push edx  ; guardo en la pila el valor
 00000212  BA 000001EE R     1			mov edx, offset ??0010
 00000217  E8 00000000 E     1			call writestring
 0000021C  E8 00000000 E     1			call crlf
 00000221  5A		     1			pop edx   ;recupero el valor original de edx
										ImpPantallaLn "               /|\"
 00000200		     1		.data
 00000200 20 20 20 20 20     1			??0011 db "               /|\",0
	   20 20 20 20 20
	   20 20 20 20 20
	   2F 7C 5C 00
 00000222		     1		.code
 00000222  52		     1			push edx  ; guardo en la pila el valor
 00000223  BA 00000200 R     1			mov edx, offset ??0011
 00000228  E8 00000000 E     1			call writestring
 0000022D  E8 00000000 E     1			call crlf
 00000232  5A		     1			pop edx   ;recupero el valor original de edx
										ImpPantallaLn "                |"
 00000213		     1		.data
 00000213 20 20 20 20 20     1			??0012 db "                |",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 00
 00000233		     1		.code
 00000233  52		     1			push edx  ; guardo en la pila el valor
 00000234  BA 00000213 R     1			mov edx, offset ??0012
 00000239  E8 00000000 E     1			call writestring
 0000023E  E8 00000000 E     1			call crlf
 00000243  5A		     1			pop edx   ;recupero el valor original de edx
										ImpPantallaLn "               \ /"
 00000225		     1		.data
 00000225 20 20 20 20 20     1			??0013 db "               \ /",0
	   20 20 20 20 20
	   20 20 20 20 20
	   5C 20 2F 00
 00000244		     1		.code
 00000244  52		     1			push edx  ; guardo en la pila el valor
 00000245  BA 00000225 R     1			mov edx, offset ??0013
 0000024A  E8 00000000 E     1			call writestring
 0000024F  E8 00000000 E     1			call crlf
 00000254  5A		     1			pop edx   ;recupero el valor original de edx
										Salto
 00000238		     1		.data
 00000255		     1		.code
 00000255  E8 00000000 E     1			call crlf
										ImpPantalla_N_Ln "La Palabra Era: "
 00000238		     1		.data
 00000238 4C 61 20 50 61     1			??0014 db "La Palabra Era: ",0
	   6C 61 62 72 61
	   20 45 72 61 3A
	   20 00
 0000025A		     1		.code
 0000025A  52		     1			push edx  ; guardo en la pila el valor
 0000025B  BA 00000238 R     1			mov edx, offset ??0014
 00000260  E8 00000000 E     1			call writestring
 00000265  5A		     1			pop edx   ;recupero el valor original de edx
 00000266  BA 0000002C R							mov edx, offset palabraSeleccionada
										EscribirTXT
 00000249		     1		.data
 0000026B		     1		.code
 0000026B  E8 00000000 E     1		call writestring
										Salto
 00000249		     1		.data
 00000270		     1		.code
 00000270  E8 00000000 E     1			call crlf
 00000275  EB 05								jmp Reintentar
 00000277								continua:
 00000277  E9 FFFFFE52								jmp MainMenu

 0000027C			Reintentar:
									Salto
 00000249		     1		.data
 0000027C		     1		.code
 0000027C  E8 00000000 E     1			call crlf
									ImpPantalla "Quieres Volver a Jugar??? (SI: 0 / NO: 1): "
 00000249		     1		.data
 00000249 51 75 69 65 72     1			??0015 db "Quieres Volver a Jugar??? (SI: 0 / NO: 1): ",0
	   65 73 20 56 6F
	   6C 76 65 72 20
	   61 20 4A 75 67
	   61 72 3F 3F 3F
	   20 28 53 49 3A
	   20 30 20 2F 20
	   4E 4F 3A 20 31
	   29 3A 20 00
 00000281		     1		.code
 00000281  52		     1			push edx  ; guardo en la pila el valor
 00000282  BA 00000249 R     1			mov edx, offset ??0015
 00000287  E8 00000000 E     1			call writestring		
 0000028C  5A		     1			pop edx   ;recupero el valor original de edx
									LeeNTeclado
 00000275		     1		.data
 0000028D		     1		.code
 0000028D  E8 00000000 E     1		call readdec
									Salto
 00000275		     1		.data
 00000292		     1		.code
 00000292  E8 00000000 E     1			call crlf
 00000297  A3 00000047 R						mov Elije, eax
									Salto
 00000275		     1		.data
 0000029C		     1		.code
 0000029C  E8 00000000 E     1			call crlf
 000002A1  83 3D 00000047 R						cmp Elije,0
	   00
 000002A8  74 02							jz Jugar
 000002AA  EB 48							jmp Salir

 000002AC			Jugar:
								ImpPantallaLn "(0J0) -NUEVA PARTIDA- (0J0)"
 00000275		     1		.data
 00000275 28 30 4A 30 29     1			??0016 db "(0J0) -NUEVA PARTIDA- (0J0)",0
	   20 2D 4E 55 45
	   56 41 20 50 41
	   52 54 49 44 41
	   2D 20 28 30 4A
	   30 29 00
 000002AC		     1		.code
 000002AC  52		     1			push edx  ; guardo en la pila el valor
 000002AD  BA 00000275 R     1			mov edx, offset ??0016
 000002B2  E8 00000000 E     1			call writestring
 000002B7  E8 00000000 E     1			call crlf
 000002BC  5A		     1			pop edx   ;recupero el valor original de edx
								Salto
 00000291		     1		.data
 000002BD		     1		.code
 000002BD  E8 00000000 E     1			call crlf
 000002C2  C7 05 0000003B R					mov Vidas,10
	   0000000A
 000002CC  C7 05 0000003F R					mov contador,0
	   00000000
 000002D6  C7 05 00000043 R					mov LetrasDescubiertas,0
	   00000000
 000002E0  C7 05 00000047 R					mov Elije,0
	   00000000
 000002EA  E9 FFFFFD66					    jmp Play

							Salto
 00000291		     1		.data
 000002EF		     1		.code
 000002EF  E8 00000000 E     1			call crlf

 000002F4					Salir:
						  exit	

 000002FB				ahorcado ENDP
					END ahorcado
Microsoft (R) Macro Assembler Version 14.29.30133.0	    12/01/21 18:11:48
JUEGO DEL AHORCAD					     Symbols 2 - 1




Macros:

                N a m e                 Type

EscribirCARACTER . . . . . . . .	Proc
EscribirNUM  . . . . . . . . . .	Proc
EscribirTXT  . . . . . . . . . .	Proc
ImpPantallaLn  . . . . . . . . .	Proc
ImpPantalla_LecturaLn_V2 . . . .	Proc
ImpPantalla_LecturaLn  . . . . .	Proc
ImpPantalla_N_Ln . . . . . . . .	Proc
ImpPantalla  . . . . . . . . . .	Proc
Imp  . . . . . . . . . . . . . .	Proc
LeeNTeclado  . . . . . . . . . .	Proc
LeerCARACTER . . . . . . . . . .	Proc
LeerTXT  . . . . . . . . . . . .	Proc
RangoAl  . . . . . . . . . . . .	Proc
Salto  . . . . . . . . . . . . .	Proc
Semilla  . . . . . . . . . . . .	Proc
Suma_V1  . . . . . . . . . . . .	Proc
Suma_V2  . . . . . . . . . . . .	Proc
Suma_V3  . . . . . . . . . . . .	Proc
Sumatoria  . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000291 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000002FB Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ahorcado . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000002FB Public STDCALL
  Play . . . . . . . . . . . . .	L Near	 00000055 _TEXT	
  ciclo  . . . . . . . . . . . .	L Near	 0000007C _TEXT	
  detener  . . . . . . . . . . .	L Near	 0000009A _TEXT	
  MainMenu . . . . . . . . . . .	L Near	 000000CE _TEXT	
  ciclo2 . . . . . . . . . . . .	L Near	 00000119 _TEXT	
  continuar  . . . . . . . . . .	L Near	 0000012B _TEXT	
  Comparar . . . . . . . . . . .	L Near	 00000154 _TEXT	
  esigual  . . . . . . . . . . .	L Near	 00000164 _TEXT	
  noesigual  . . . . . . . . . .	L Near	 000001C8 _TEXT	
  Fin  . . . . . . . . . . . . .	L Near	 000001F0 _TEXT	
  sale . . . . . . . . . . . . .	L Near	 000001FB _TEXT	
  continua . . . . . . . . . . .	L Near	 00000277 _TEXT	
  Reintentar . . . . . . . . . .	L Near	 0000027C _TEXT	
  Jugar  . . . . . . . . . . . .	L Near	 000002AC _TEXT	
  Salir  . . . . . . . . . . . .	L Near	 000002F4 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 0000005A _DATA	
??0001 . . . . . . . . . . . . .	Byte	 0000007B _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000009C _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000000BE _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000000DF _DATA	
??0005 . . . . . . . . . . . . .	Byte	 00000101 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 00000115 _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00000137 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 0000014F _DATA	
??0009 . . . . . . . . . . . . .	Byte	 00000163 _DATA	
??000A . . . . . . . . . . . . .	Byte	 0000017F _DATA	
??000B . . . . . . . . . . . . .	Byte	 00000191 _DATA	
??000C . . . . . . . . . . . . .	Byte	 000001A2 _DATA	
??000D . . . . . . . . . . . . .	Byte	 000001B3 _DATA	
??000E . . . . . . . . . . . . .	Byte	 000001C5 _DATA	
??000F . . . . . . . . . . . . .	Byte	 000001CC _DATA	
??0010 . . . . . . . . . . . . .	Byte	 000001EE _DATA	
??0011 . . . . . . . . . . . . .	Byte	 00000200 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00000213 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00000225 _DATA	
??0014 . . . . . . . . . . . . .	Byte	 00000238 _DATA	
??0015 . . . . . . . . . . . . .	Byte	 00000249 _DATA	
??0016 . . . . . . . . . . . . .	Byte	 00000275 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
Elije  . . . . . . . . . . . . .	DWord	 00000047 _DATA	
Espacio  . . . . . . . . . . . .	Byte	 0000002A _DATA	
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LetrasDescubiertas . . . . . . .	DWord	 00000043 _DATA	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
Vidas  . . . . . . . . . . . . .	DWord	 0000003B _DATA	
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
contador . . . . . . . . . . . .	DWord	 0000003F _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
palabraEscondida . . . . . . . .	Byte	 0000004B _DATA	
palabraSeleccionada  . . . . . .	Byte	 0000002C _DATA	
palabras_arreglo . . . . . . . .	Byte	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
